---
# These tasks apply to all nodes.

# DNS related tasks
- name: Try to ping ipa-ca
  command: ping -c 3 ipa-ca
  register: ipa_ca_ping_status
  ignore_errors: true
  changed_when: false
  tags:
    - post-undercloud-deploy

- name: Set facts for ok DNS configuration
  set_fact:
    dns_status: '{{ helper_status_ok }}'
    dns_reason: DNS is configured correctly
    dns_recommendations: null
  when: ipa_ca_ping_status.rc == 0
  tags:
    - post-undercloud-deploy

- name: Set facts for error in DNS configuration
  set_fact:
    dns_status: '{{ helper_status_error }}'
    dns_reason: DNS is NOT configured correctly
    dns_recommendations:
      - Check that the DNS server for this node points to IdM/FreeIPA
      - For the undercloud, you need to set the 'undercloud_nameservers' configuration parameter
      - For the overcloud, you need to set the 'DnsServers' parameter
      - Make sure that the relevant 'search' entry is in /etc/resolv.conf
  when: ipa_ca_ping_status.rc != 0
  tags:
    - post-undercloud-deploy

- name: Report DNS status
  import_tasks: reportentry.yml
  vars:
    report_check: "DNS check"
    report_status: '{{ dns_status }}'
    report_host: '{{ ansible_hostname }}'
    report_reason: '{{ dns_reason }}'
    report_recommendations: '{{ dns_recommendations }}'
  tags:
    - post-undercloud-deploy

# Firewall related tasks
- name: Firewall validations
  when: ipa_ca_ping_status.rc == 0
  block:
    - name: Check all relevant ports for IdM/FreeIPA are accessible from {{ ansible_hostname }}
      wait_for:
        host: ipa-ca
        port: "{{ item }}"
        state: started         # Port should be open
        delay: 0               # No wait before first check (sec)
        timeout: 3             # Stop checking after timeout (sec)
      register: port_status
      ignore_errors: true
      loop:
        - 80
        - 443
        - 389
        - 636
        - 88
        - 464
        - 53
      tags:
        - post-undercloud-deploy

    - name: Set facts for ok firewall settings
      set_fact:
        firewall_status: '{{ helper_status_ok }}'
        firewall_reason: "The host {{ ansible_hostname }} can access FreeIPA through all relevant ports"
        firewall_recommendations: null
      when: "'failed' not in port_status"
      tags:
        - post-undercloud-deploy

    - name: Set facts for issues in firewall settings
      set_fact:
        firewall_status: '{{ helper_status_error }}'
        firewall_reason: "The host {{ ansible_hostname }} could NOT access IdM/FreeIPA on some ports"
        firewall_recommendations:
          - "Please make sure that the following ports are open on the IdM/FreeIPA node: {{ firewall_query }}"
      vars:
        firewall_query: "{{ port_status.results | json_query('[?failed].item') | join(', ') }}"
      when:
        - "'failed' in port_status"
        - port_status.failed|bool
      tags:
        - post-undercloud-deploy

- name: Set facts for skipping firewall checks
  set_fact:
    firewall_status: '{{ helper_status_skipped }}'
    firewall_reason: "skipped {{ ansible_hostname }} firewall checks because DNS wasn't set correctly."
    firewall_recommendations: null
  when: ipa_ca_ping_status.rc != 0
  tags:
    - post-undercloud-deploy

- name: Report firewall status
  import_tasks: reportentry.yml
  vars:
    report_check: "Firewall check"
    report_status: '{{ firewall_status }}'
    report_host: '{{ ansible_hostname }}'
    report_reason: '{{ firewall_reason }}'
    report_recommendations: '{{ firewall_recommendations }}'
  tags:
    - post-undercloud-deploy

# IdM/FreeIPA related tasks
- name: Check for IdM/FreeIPA host configuration
  stat:
    path: /etc/ipa/default.conf
  register: ipa_conf_stat
  tags:
    - post-undercloud-deploy

- name: Set facts for IdM/FreeIPA configuration present
  set_fact:
    ipa_conf_status: '{{ helper_status_ok }}'
    ipa_conf_reason: "The host {{ ansible_host }} has the file /etc/ipa/default.conf"
    ipa_conf_recommendations: null
  when: ipa_conf_stat.stat.exists
  tags:
    - post-undercloud-deploy

- name: Set facts for IdM/FreeIPA configuration missing
  set_fact:
    ipa_conf_status: '{{ helper_status_error }}'
    ipa_conf_reason: "The host {{ ansible_host }} is missing the file /etc/ipa/default.conf"
    ipa_conf_recommendations:
      - "The host {{ ansible_host }} needs to be enrolled to IdM/FreeIPA"
      - If there were enrollment issues, you'll see them in /var/log/ipaclient-install.log
  when: not ipa_conf_stat.stat.exists
  tags:
    - post-undercloud-deploy

- name: Report IdM/FreeIPA host configuration status
  import_tasks: reportentry.yml
  vars:
    report_check: "IdM/FreeIPA host configuration check"
    report_status: '{{ ipa_conf_status }}'
    report_host: '{{ ansible_hostname }}'
    report_reason: '{{ ipa_conf_reason }}'
    report_recommendations: '{{ ipa_conf_recommendations }}'
  tags:
    - post-undercloud-deploy

# NOTE(jaosorior): This currently does a lookup, which only runs on the host that's
# running the playbook. We assume that all of the hosts are in the same realm, so
# this is not a problem for now.
- name: Set fact for IdM/FreeIPA realm
  set_fact:
    ipa_realm: "{{ lookup('ini', 'realm section=global file=/etc/ipa/default.conf') }}"
  when: ipa_conf_stat.stat.exists
  tags:
    - post-undercloud-deploy

- name: Set fact for IdM/FreeIPA host entry
  set_fact:
    host_entry: "{{ ansible_fqdn }}@{{ ipa_realm }}"
  when: ipa_conf_stat.stat.exists
  tags:
    - post-undercloud-deploy

- name: Set fact for IdM/FreeIPA host principal
  set_fact:
    host_principal: "host/{{ host_entry }}"
  when: ipa_conf_stat.stat.exists
  tags:
    - post-undercloud-deploy

# Kerberos keytab related tasks
- name: Check for kerberos host keytab
  stat:
    path: /etc/krb5.keytab
  register: krb5_keytab_stat
  tags:
    - post-undercloud-deploy

- name: Set facts for kerberos host keytab present
  set_fact:
    krb5_keytab_status: '{{ helper_status_ok }}'
    krb5_keytab_reason: "The host {{ ansible_host }} has the file /etc/krb5.keytab"
    krb5_keytab_recommendations: null
  when: krb5_keytab_stat.stat.exists
  tags:
    - post-undercloud-deploy

- name: Set facts for kerberos host keytab missing
  set_fact:
    krb5_keytab_status: '{{ helper_status_error }}'
    krb5_keytab_reason: "The host {{ ansible_host }} is missing the file /etc/krb5.keytab"
    krb5_keytab_recommendations:
      - "The host {{ ansible_host }} needs to be enrolled to IdM/FreeIPA"
      - If there were enrollment issues, you'll see them in /var/log/ipaclient-install.log
      - alternatively, you can request the keytab for this host with the ipa-getkeytab command
  when: not krb5_keytab_stat.stat.exists
  tags:
    - post-undercloud-deploy

- name: Report kerberos host keytab status
  import_tasks: reportentry.yml
  vars:
    report_check: "Kerberos host keytab check"
    report_status: '{{ krb5_keytab_status }}'
    report_host: '{{ ansible_hostname }}'
    report_reason: '{{ krb5_keytab_reason }}'
    report_recommendations: '{{ krb5_keytab_recommendations }}'
  tags:
    - post-undercloud-deploy

- name: List Kerberos principals in /etc/krb5.keytab
  expect:
    command: ktutil
    responses:
      ktutil:
        - "rkt /etc/krb5.keytab"
        - "list"
        - "quit"
  register: keytab_principal_list
  changed_when: false
  become: true
  when: krb5_keytab_stat.stat.exists
  tags:
    - post-undercloud-deploy

- name: Set facts for host principals in /etc/krb5.keytab
  set_fact:
    principal_in_keytab_status: '{{ helper_status_ok }}'
    principal_in_keytab_reason: "The principal {{ host_principal }} is in the keytab"
    principal_in_keytab_recommendations: null
  when:
    - krb5_keytab_stat.stat.exists
    - ipa_conf_stat.stat.exists
    - "host_principal in keytab_principal_list.stdout"
  tags:
    - post-undercloud-deploy

- name: Set facts for host principals NOT in /etc/krb5.keytab
  set_fact:
    principal_in_keytab_status: '{{ helper_status_error }}'
    principal_in_keytab_reason: "The principal {{ host_principal }} is  missing from the keytab"
    principal_in_keytab_recommendations:
      - You might have overwritten the keytab. Re-enroll or request the keytab using ipa-getkeytab
  when:
    - krb5_keytab_stat.stat.exists
    - ipa_conf_stat.stat.exists
    - "host_principal not in keytab_principal_list.stdout"
  tags:
    - post-undercloud-deploy

- name: Set facts for skipping host principals check without IdM/FreeIPA config
  set_fact:
    principal_in_keytab_status: '{{ helper_status_skipped }}'
    principal_in_keytab_reason: "skipped checking for the principal in the host's {{ ansible_host }} because there is no keytab file"
    principal_in_keytab_recommendations: null
  when:
    - not ipa_conf_stat.stat.exists
    - krb5_keytab_stat.stat.exists
  tags:
    - post-undercloud-deploy

- name: Set facts for skipping host principals check without keytab
  set_fact:
    principal_in_keytab_status: '{{ helper_status_skipped }}'
    principal_in_keytab_reason: "skipped checking for the principal in the host's {{ ansible_host }} because there is no keytab file"
    principal_in_keytab_recommendations: null
  when:
    - not krb5_keytab_stat.stat.exists
  tags:
    - post-undercloud-deploy

- name: Report kerberos host keytab status
  import_tasks: reportentry.yml
  vars:
    report_check: "Kerberos principal in host keytab check"
    report_status: '{{ principal_in_keytab_status }}'
    report_host: '{{ ansible_hostname }}'
    report_reason: '{{ principal_in_keytab_reason }}'
    report_recommendations: '{{ principal_in_keytab_recommendations }}'
  tags:
    - post-undercloud-deploy
