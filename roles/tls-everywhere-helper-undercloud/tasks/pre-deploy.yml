---
- name: Verify that undercloud.conf exists
  stat:
    path: "{{ helper_undercloud_path }}/undercloud.conf"
  register: undercloud_conf_st

# We really can't continue without undercloud.conf
- name: Fail if undercloud.conf is not present
  fail:
    msg: undercloud.conf is necessary to continue the validations
  when: not undercloud_conf_st.stat.exists|bool

# undercloud.conf DNS check
- name: Verify that nameservers are set in undercloud.conf
  set_fact:
    undercloud_nameservers: "{{ lookup('ini', 'undercloud_nameservers section=DEFAULT file={{ helper_undercloud_path }}/undercloud.conf') }}"

- name: Check that nameservers point to IdM/FreeIPA
  set_fact:
    undercloud_conf_dns_query: "{{ lookup('dig', 'ipa-ca', '@{{ item }}') }}"
  loop: "{{ undercloud_nameservers.split(',') }}"
  when: undercloud_nameservers != "" and undercloud_nameservers != []

- name: Set facts undercloud.conf DNS is not configured
  set_fact:
    undercloud_conf_dns_status: '{{ helper_status_error }}'
    undercloud_conf_dns_reason: 'DNS is not set up correctly in undercloud.conf'
    undercloud_conf_dns_recommendations:
      - "Please set the 'undercloud_nameservers' parameter to point to IdM/FreeIPA in undercloud.conf"
  when: undercloud_conf_dns_query|default('NXDOMAIN') == "NXDOMAIN"

- name: Set facts undercloud.conf DNS is configured
  set_fact:
    undercloud_conf_dns_status: '{{ helper_status_ok }}'
    undercloud_conf_dns_reason: 'DNS is set up correctly in undercloud.conf'
    undercloud_conf_dns_recommendations: null
  when: undercloud_conf_dns_query|default('NXDOMAIN') != "NXDOMAIN"

- name: Report DNS setup in undercloud.conf
  include_role:
    name: tls-everywhere-helper-common
    tasks_from: reportentry.yml 
  vars:
    report_check: "DNS setup in undercloud.conf check"
    report_status: '{{ undercloud_conf_dns_status }}'
    report_host: '{{ ansible_hostname }}'
    report_reason: '{{ undercloud_conf_dns_reason }}'
    report_recommendations: '{{ undercloud_conf_dns_recommendations }}'

# undercloud neutron domain check
- name: Block for neutron domain check in undercloud.conf
  when: undercloud_conf_dns_query|default('NXDOMAIN') != "NXDOMAIN"
  block:
    # NOTE(jaosorior): This returns a complete answer about the
    # query. We're just gonna get the FQDN out of this.
    - name: Get IdM/FreeIPA hostname from ip
      shell: host {{ undercloud_conf_dns_query }} | awk '{print $5}'
      register: host_from_ip_reg
      changed_when: false

    - name: Get domain is set in undercloud.conf
      set_fact:
        undercloud_overcloud_domain: "{{ lookup('ini', 'overcloud_domain_name section=DEFAULT file={{ helper_undercloud_path }}/undercloud.conf') }}"

    - name: Set facts undercloud.conf domain is not configured correctly
      set_fact:
        undercloud_conf_domain_status: '{{ helper_status_error }}'
        undercloud_conf_domain_reason: 'Domain is not set up correctly in undercloud.conf'
        undercloud_conf_domain_recommendations:
          - "Please set the 'overcloud_domain_name' parameter to point to the IdM/FreeIPA's domain in undercloud.conf"
      when: undercloud_overcloud_domain == "" or undercloud_overcloud_domain == [] or undercloud_overcloud_domain not in host_from_ip_reg.stdout

    - name: Set facts undercloud.conf domain is configured correctly
      set_fact:
        undercloud_conf_domain_status: '{{ helper_status_ok }}'
        undercloud_conf_domain_reason: 'Domain is set up correctly in undercloud.conf'
        undercloud_conf_domain_recommendations: null
      when:
        - undercloud_overcloud_domain != ""
        - undercloud_overcloud_domain != []
        - undercloud_overcloud_domain in host_from_ip_reg.stdout

    - name: Report domain setup in undercloud.conf
      include_role:
        name: tls-everywhere-helper-common
        tasks_from: reportentry.yml 
      vars:
        report_check: "Domain setup in undercloud.conf check"
        report_status: '{{ undercloud_conf_domain_status }}'
        report_host: '{{ ansible_hostname }}'
        report_reason: '{{ undercloud_conf_domain_reason }}'
        report_recommendations: '{{ undercloud_conf_domain_recommendations }}'

- name: Get enable_novajoin flag from undercloud.conf
  set_fact:
    undercloud_enable_novajoin: "{{ lookup('ini', 'enable_novajoin section=DEFAULT default=False file={{ helper_undercloud_path }}/undercloud.conf') }}"

- name: Set facts undercloud.conf enable novajoin is disabled
  set_fact:
    undercloud_conf_enable_novajoin_status: '{{ helper_status_error }}'
    undercloud_conf_enable_novajoin_reason: 'enable_novajoin is not enabled undercloud.conf'
    undercloud_conf_enable_novajoin_recommendations:
      - "Please set 'enable_novajoin' to True in undercloud.conf"
  when: not undercloud_enable_novajoin|bool

- name: Set facts undercloud.conf enable novajoin is enabled
  set_fact:
    undercloud_conf_enable_novajoin_status: '{{ helper_status_ok }}'
    undercloud_conf_enable_novajoin_reason: 'enable_novajoin is enabled undercloud.conf'
    undercloud_conf_enable_novajoin_recommendations: null
  when: undercloud_enable_novajoin|bool

- name: Report enable novajoin setup in undercloud.conf
  include_role:
    name: tls-everywhere-helper-common
    tasks_from: reportentry.yml 
  vars:
    report_check: "Enable novajoin setup in undercloud.conf check"
    report_status: '{{ undercloud_conf_enable_novajoin_status }}'
    report_host: '{{ ansible_hostname }}'
    report_reason: '{{ undercloud_conf_enable_novajoin_reason }}'
    report_recommendations: '{{ undercloud_conf_enable_novajoin_recommendations }}'
